+LoggerService = {
    Class = LoggerService
    CPUs = 0x1
    StackSize = 32768 
    NumberOfLogPages = 128 
    +ConLogger = {
        Class = ConsoleLogger
        Format = "EtOoFmC"
        PrintKeys = 1
    }
}
+StateMachine = {
    Class = StateMachine
    +INITIAL = {
        Class = ReferenceContainer
        +START = {
            Class = StateMachineEvent
            NextState = "RUNNING"
            NextStateError = "ERROR"
            +PrepareNextStateOnOurRTApp = {
        		Class = Message
        		Destination = MyDemoApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = State1
        		}
        	}
            +StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = MyDemoApp 
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
        }        
    }
    +RUNNING = {
        Class = ReferenceContainer
        +LOCKEDFOREVER = {
            Class = StateMachineEvent
            NextState = RUNNING
            NextStateError = ERROR
        }
    }
    +ERROR = {
        Class = ReferenceContainer
        +LOCKEDFOREVER = {
            Class = StateMachineEvent
            NextState = ERROR 
            NextStateError = ERROR
        }
    }
}
+MyDemoApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMTimer = {
            Class = IOGAM
            InputSignals = {
                Time = {
                    DataSource = Timer
                    Type = uint32
                }
                Counter = {
                    DataSource = Timer
                    Type = uint32
                    Frequency = 10
                    //Frequency = 100000
                }
                RTThreadPerf = {
                    DataSource = Timings
                	Alias = "State1.Thread1_CycleTime"
                    Type = uint32
                }
            }
            OutputSignals = {
                Time = {
                    DataSource = DDB1
                    Type = uint32
                } 
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                } 
                RTThreadPerf = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
        }
        +GAMEPICSCA = {
            Class = IOGAM
        	InputSignals = {
                PulseLength1 = {
                    DataSource = EPICSCAInput
                    Type = uint32
                }
                PulseLength2 = {
                    DataSource = EPICSCAInput
                    Type = uint32
                }
                PulseTrigger = {
                    DataSource = EPICSCAInput
                    Type = uint32
                }
            }
            OutputSignals = {
                PulseLength1 = {
                    DataSource = DDB1
                    Type = uint32
                }
                PulseLength2 = {
                    DataSource = DDB1
                    Type = uint32
                }
                PulseTrigger = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
        }
        +GAMRealTimeStateMachine = {
        	Class = JARTStateMachineGAM
        	ConditionTrigger = 1
        	Output1 = 2
        	Output2 = 3
        	InputSignals = {
        		Time = {
        			DataSource = DDB1
                    Type = uint32
        		}
        		PulseTrigger = {
                    DataSource = DDB1
                    Type = uint32
                }
                PulseLength1 = {
                    DataSource = DDB1
                    Type = uint32
                }
                PulseLength2 = {
                    DataSource = DDB1
                    Type = uint32
                }

            }
            OutputSignals = {
                Value = {
                    //DataSource = NI6259
                    //DataSource = DDB1
                    //Type = uint8
                    DataSource = Display
                    Type = uint32
                    Trigger = 1
                }
            }
        }        
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1 
        +DDB1 = {
        	Class = GAMDataSource
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Busy"
            SleepPercentage = 0
            ExecutionMode = RealTimeThread
            CPUMask = 0x2
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }        
		+EPICSCAInput = {
            Class = "EPICSCA::EPICSCAInput"
            CPUMask = "1" 
            StackSize = "10000000"
            Signals = {            
                PulseLength1 = {
                    PVName = "ECJASDN::TEST::PULSELEN1"
                }
                PulseLength2 = {
                    PVName = "ECJASDN::TEST::PULSELEN2"
                }
                PulseTrigger = {
                    PVName = "ECJASDN::TEST::PULSETRG"
                }
            }
        }
        +Display = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    Functions = {GAMTimer GAMEPICSCA GAMRealTimeStateMachine}
                    CPUMask = 0x2
                }
            }
        }        
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}

