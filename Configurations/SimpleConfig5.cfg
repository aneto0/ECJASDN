+StateMachine = {
    Class = StateMachine
    +INITIAL = {
        Class = ReferenceContainer
        +GO1 = {
            Class = StateMachineEvent
            NextState = "RUNNING1"
            NextStateError = "ERROR"
            +PrepareNextStateOnOurRTApp = {
        		Class = Message
        		Destination = MyDemoApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = State1
        		}
        	}
            +StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = MyDemoApp 
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
        }
    }
    +RUNNING1 = {
        Class = ReferenceContainer
        +GO2 = {
            Class = StateMachineEvent
            NextState = "RUNNING2"
            NextStateError = "ERROR"
            +PrepareNextStateOnOurRTApp = {
        		Class = Message
        		Destination = MyDemoApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = State2
        		}
        	}
            +StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = MyDemoApp 
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}
            +StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = MyDemoApp 
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
        }
    }
    +RUNNING2 = {
        Class = ReferenceContainer
        +GO1 = {
            Class = StateMachineEvent
            NextState = "RUNNING1"
            NextStateError = "ERROR"
            +PrepareNextStateOnOurRTApp = {
        		Class = Message
        		Destination = MyDemoApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = State1
        		}
        	}
            +StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = MyDemoApp 
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}
            +StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = MyDemoApp 
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
        }
    }
    +ERROR = {
        Class = ReferenceContainer
        +LOCKED4EVER = {
            Class = StateMachineEvent
            NextState = ERROR 
            NextStateError = ERROR
        }
    }
}
+MyDemoApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
	    +TimerGAM = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                    Frequency = 100  /* Hz */
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = Display
                    Type = int32
                }
            }
        }
        +Countdown1 = {
            Class = JACountdownGAM
            Step = 10
            OutputValue = 1
            InputSignals = {
                Standby = {
                    DataSource = DDB1
                    Type = uint32
                }
                
            }
            OutputSignals = {
                Standby1 = {
                    DataSource = Display
                    Type = uint32
                }
            }
        }
        +Constant1 = {
            Class = ConstantGAM
            OutputSignals = {
                Standby = { /* Signal name*/
                    DataSource = DDB1
                    Type = uint32
                    Default = 1000
                }
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1 
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            SleepPercentage = 30
            ExecutionMode = RealTimeThread
            CPUMask = 0x1
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }
        +Display = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +DDB1 = {
        	Class = GAMDataSource
        }
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    Functions = {TimerGAM Constant1 Countdown1}
                    CPUMask = 0x1
                }
            }
        }
        +State2 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    Functions = {TimerGAM Constant1 Countdown1}
                    CPUMask = 0x1
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}

