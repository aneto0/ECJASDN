/*+LoggerService = {
    Class = LoggerService
    CPUs = 0x1
    StackSize = 32768 
    NumberOfLogPages = 128 
    +ConLogger = {
        Class = ConsoleLogger
        Format = "EtOoFmC"
        PrintKeys = 1
    }
    +SysLogger = {
        Class = SysLogger
        Format = "EtOoFmC"
        PrintKeys = 1
        Ident = "ECPC"
    }
}*/
+StateMachine = {
    Class = StateMachine
    +INITIAL = {
        Class = ReferenceContainer
        +START = {
            Class = StateMachineEvent
            NextState = "IDLE"
            NextStateError = "IDLE"
            Timeout = 0
            +ChangeToIdleMsg = {
                Class = Message
                Destination = ECPCApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Idle
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = ECPCApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
    }
    +IDLE = {
        Class = ReferenceContainer
        +ERROR = {
            Class = StateMachineEvent
            NextState = "ERROR"
            NextStateError = "ERROR"
        }
    }
    +ERROR = {
        Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = ECPCApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +PrepareChangeToErrorMsg = {
                Class = Message
                Destination = ECPCApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Error
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = ECPCApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
            +SetStatusPV = {
                Class = Message
                Destination = "EPICS_CA.PV_STATUS"
                Function = CAPut
                Mode = ExpectsReply
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 0
                }
            } 
            +SetErrorPV = {
                Class = Message
                Destination = "EPICS_CA.PV_ERROR"
                Function = CAPut
                Mode = ExpectsReply
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 1
                }
            } 
        }
        +RESET = {
            Class = StateMachineEvent
            NextState = "IDLE"
            NextStateError = "IDLE"
            Timeout = 0
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = ECPCApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +ResetErrorPV = {
                Class = Message
                Destination = "EPICS_CA.PV_ERROR"
                Function = CAPut
                Mode = ExpectsReply
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 0
                }
            }
            +PrepareChangeToIdleMsg = {
                Class = Message
                Destination = ECPCApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Idle
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = ECPCApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
            +SetErrorStatusPV = {
                Class = Message
                Destination = "EPICS_CA.PV_ERROR"
                Function = CAPut
                Mode = ExpectsReply
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 0
                }
            } 
        }
        +ERROR = {
            Class = StateMachineEvent
            NextState = "ERROR"
            NextStateError = "ERROR"
        }
    }
}
$ECPCApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMSDNSub = {
            Class = IOGAM
            InputSignals = {
                ReplyPacketAbsoluteTime = {
                    DataSource = SDNSub
                    Alias = Header
                    NumberOfElements = 48
                    Type = uint8
                    Ranges = {{40, 47}}
                    //Trigger = 1
                }
                ReplyPacketESDNTime = {
                    DataSource = SDNSub
                    Alias = ESDNTime
                    Type = uint32
                }
                ReplyPacketWaveformID = {
                    DataSource = SDNSub
                    Alias = ReplyWaveformAck
                    Type = uint16
                }
                CommandPacketAbsoluteTime = {
                	DataSource = SDNPubCommands
                    Alias = Header
                    NumberOfElements = 48
                    Type = uint8
                    Ranges = {{32, 39}}
                }
                WaveformPacketID = {
                    DataSource = RealTimeThreadAsyncBridge
                    Type = uint16
                }
            }
            OutputSignals = {
                ReplyPacketAbsoluteTime = {
                    DataSource = DDB1
                    Type = uint64
                }
                ReplyPacketESDNTime = {
                    DataSource = DDB1
                    Type = uint32
                }
                ReplyPacketWaveformID = {
                    DataSource = DDB1
                    Type = uint16
                }
                CommandPacketAbsoluteTime = {
                	DataSource = DDB1
                    Type = uint64
                }
                WaveformPacketID = {
                    DataSource = DDB1
                    Type = uint16
                }
            }
        }
        +Timer = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = LinuxTimer
                    Type = uint32
                }
                Time = {
                    DataSource = LinuxTimer
                    Type = uint32
                    Frequency = 1000
                }
            }
            OutputSignals = {
                ESDNTime = {
                    DataSource = DDB1
                    Type = uint32
                }
                TimeUs = {
                    DataSource = DDB1
                    Type = uint32
                } 
            }
        }
        +GAMSDNPubCommands = {
            Class = IOGAM
            InputSignals = {
                ESDNTime = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
            OutputSignals = {
                ESDNTime = {
                    DataSource = SDNPubCommands
                    Type = uint32
                    Trigger = 1
                }
            }
        }
        +GAMSDNPubWaveformPacket = {
            Class = IOGAM
            InputSignals = {
                ESDNTimeArr = {
                    DataSource = DDB1
                    Type = uint32
                    Ranges = {{9 9}}
                }
                WaveformPacketID = {
                    DataSource = RandomDataSource
                    Type = uint16
                }
                WaveformPacketIDFor1kHz = {
                    DataSource = RandomDataSource
                    Alias = WaveformPacketID
                    Type = uint16
                }
            }
            OutputSignals = {
                ESDNTime = {
                    DataSource = SDNPubWaveformPacket
                    Type = uint32
                    Trigger = 1
                }
                WaveformPacketID = {
                    DataSource = SDNPubWaveformPacket
                    Type = uint16
                }
                WaveformPacketIDFor1kHz = {
                    DataSource = RealTimeThreadAsyncBridge
                    Alias = WaveformPacketID
                    Type = uint16
                }
            }
        }
        +GAMESDNValidation = {
            Class = ESDNValidationGAM
            MaximumESDNFailures = 3
            MinimumESDNSuccesses = 3
            ReplyPacketMaximumDelay = 800 
            InputSignals = {
                CommandPacketAbsoluteTime = {
                    DataSource = DDB1
                    Type = uint64
                }
                ESDNTime = {
                	DataSource = DDB1
                    NumberOfElements = 1
                    Type = uint32
                }
                WaveformPacketID = {
                    DataSource = DDB1
                    Type = uint16
                }
                ReplyPacketAbsoluteTime = {
                    DataSource = DDB1
                    Type = uint64
                }
                ReplyPacketESDNTime = {
                    DataSource = DDB1
                    Type = uint32
                }
                ReplyPacketWaveformID = {
                    DataSource = DDB1
                    Type = uint16
                }
            }
            OutputSignals = {//Order is important!
                ReplyPacketLatency = {
                    Type = uint32
                    DataSource = DDB1
                }
                ReplyPacketOnTimeCounter = {
                    Type = uint32
                    DataSource = DDB1
                }
                ReplyPacketLateCounter = {
                    Type = uint32
                    DataSource = DDB1
                }
                ReplyPacketWaveformLateCounter = { 
                    DataSource = DDB1
                    Type = uint32
                }
                ESDNSCUConnectionState = {
                    Type = uint8
                    DataSource = DDB1
                }
            }
        }        
        +GAMIdleCTStatistics = {
            Class = StatisticsGAM
            WindowSize = 1000
            InputSignals = {
                CycleTimeIdleThread1kHz = {
                     DataSource = "Timings"
                     Alias = "Idle.Thread1kHz_CycleTime"
                     Type = uint32
                }
            }
            OutputSignals = {
                CycleTimeIdleThread1kHzAvg = {
                    DataSource = "DDB1"
                    Type = uint32
                }
                CycleTimeIdleThread1kHzStd = {
                    DataSource = "DDB1" 
                    Type = uint32
                }
                CycleTimeIdleThread1kHzMin = {
                    DataSource = "DDB1"
                    Type = uint32
                }
                CycleTimeIdleThread1kHzMax = {
                    DataSource = "DDB1"
                    Type = uint32
                }
            }
        }
        +GAMReplyPacketStatistics = {
            Class = StatisticsGAM
            WindowSize = 1000
            InputSignals = {
                ReplyPacketLatency = {
                    DataSource = "DDB1"
                    Type = uint32
                }
            }
            OutputSignals = {
                ReplyPacketLatencyAvg = {
                    DataSource = "DDB1"
                    Type = uint32
                }
                ReplyPacketLatencyStd = {
                    DataSource = "DDB1" 
                    Type = uint32
                }
                ReplyPacketLatencyMin = {
                    DataSource = "DDB1"
                    Type = uint32
                }
                ReplyPacketLatencyMax = {
                    DataSource = "DDB1"
                    Type = uint32
                }
            }
        }
        +GAMThreadSynchOut100Hz = {
            Class = IOGAM
            InputSignals = {
                ESDNTime = {
                    DataSource = "DDB1"
                    Type = uint32
                }
            }
            OutputSignals = {
                ESDNTime = {
                    DataSource = "RTThreadSynch100Hz"
                    Type = uint32
                    Trigger = 1
                }
            }
        }
        +GAMThreadSynchIn100Hz = {
            Class = IOGAM
            InputSignals = {
                ESDNTime = {
                    DataSource = "RTThreadSynch100Hz"
                    Type = uint32
                    Frequency = 10
                    Samples = 10
                }
            }
            OutputSignals = {
                ESDNTimeArr = {
                    DataSource = "DDB1"
                    Type = uint32
                    NumberOfElements = 10
                }
            }
        }
        +GAMConversion = {
            Class = ConversionGAM
            InputSignals = {
                ESDNSCUConnectionState = {
                    Type = uint8
                    DataSource = DDB1 
                }
            }
            OutputSignals = {
                ESDNSCUConnectionStateUInt32 = {
                    DataSource = "DDB1"
                    Type = uint32
                }
            }
        }
        +GAMEPICSCAOut = {
            Class = IOGAM
            InputSignals = {
                ESDNTime = {
                    DataSource = "DDB1"
                    Type = uint32
                }
                CycleTimeIdleThread1kHzAvg = {
                    DataSource = "DDB1"
                    Type = uint32
                }
                CycleTimeIdleThread1kHzMax = {
                    DataSource = "DDB1"
                    Type = uint32
                }
                ReplyPacketLatencyAvg = {
                    Type = uint32
                    DataSource = DDB1
                }
                ReplyPacketLatencyMin = {
                    Type = uint32
                    DataSource = DDB1
                }
                ReplyPacketLatencyMax = {
                    Type = uint32
                    DataSource = DDB1
                }
                ReplyPacketOnTimeCounter = {
                    Type = uint32
                    DataSource = DDB1 
                }
                ReplyPacketLateCounter= {
                    Type = uint32
                    DataSource = DDB1 
                }
                ReplyPacketWaveformLateCounter = {
                    Type = uint32
                    DataSource = DDB1 
                }
                ESDNSCUConnectionStateUInt32 = {
                    Type = uint32
                    DataSource = DDB1 
                    NumberOfElements = 1
                }
            }
            OutputSignals = {
                ESDNTime = {
                    DataSource = "EPICSCAOut"
                    Type = uint32
                    NumberOfElements = 1
                }
                CycleTimeIdleThread1kHzAvg = {
                    DataSource = "EPICSCAOut"
                    Type = uint32
                    NumberOfElements = 1
                }
                CycleTimeIdleThread1kHzMax = {
                    DataSource = "EPICSCAOut"
                    Type = uint32
                    NumberOfElements = 1
                }
                ReplyPacketLatencyAvg = {
                    Type = uint32
                    DataSource = EPICSCAOut
                    NumberOfElements = 1
                }
                ReplyPacketLatencyMin = {
                    Type = uint32
                    DataSource = EPICSCAOut
                    NumberOfElements = 1
                }
                ReplyPacketLatencyMax = {
                    Type = uint32
                    DataSource = EPICSCAOut
                    NumberOfElements = 1
                }
                ReplyPacketOnTimeCounter = {
                    Type = uint32
                    DataSource = EPICSCAOut
                    NumberOfElements = 1
                }
                ReplyPacketLateCounter = {
                    Type = uint32
                    DataSource = EPICSCAOut
                    NumberOfElements = 1
                }
                ReplyPacketWaveformLateCounter = {
                    Type = uint32
                    DataSource = EPICSCAOut
                    NumberOfElements = 1
                }
                ESDNSCUConnectionState = {
                    Type = uint32
                    DataSource = EPICSCAOut
                    NumberOfElements = 1
                }
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        /*+LoggerDataSource = {
            Class = LoggerDataSource
        }*/
        +DDB1 = {
            Class = GAMDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +LinuxTimer = {
            Class = LinuxTimer
            SleepNature = Busy
            ExecutionMode = RealTimeThread
            CPUMask = 0x4
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }
        +SDNSub = {
            Class = SDN::SDNSubscriber
            Topic = SCURU2ECPC
            Interface = eth3
            CPUs = 0x8
            Locked = 1
            Signals = {
                Header = {
                     Type = uint8
                     NumberOfElements = 48
                }
                ESDNHeaderVersionId = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ESDNHeaderSize = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ESDNStatus = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ESDNDoNotUse = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ESDNTime = {
                    Type = uint32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ReplyStatus = {
                    Type = uint16
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ReplyWaveformAck = {
                    Type = uint16
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1StatusOverall = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1StatusMagnets = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1StatusFilament = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1StatusHVPS = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1StatusAuxiliaries = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1AlarmCutoff  = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1AlarmArcs  = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1AlarmOvercurrent  = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1PercentageVacuum  = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1PercentageCollector = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1PercentageCooling = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1PercentageCathode = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2StatusOverall = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2StatusMagnets = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2StatusFilament = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2StatusHVPS = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2StatusAuxiliaries = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2AlarmCutoff  = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2AlarmArcs  = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2AlarmOvercurrent  = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2PercentageVacuum  = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2PercentageCollector = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2PercentageCooling = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2PercentageCathode = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1MeasurementsPowerEstimation = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1MeasurementsPowerConsumption = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1MeasurementsMVPSCurrent = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1MeasurementsBPSCurrent = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1MeasurementsAPSCurrent = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1MeasurementsFilamentCurrent = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1MeasurementsSCMCurrents = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 4
                }
                Gyrotron1MeasurementsCollectorSweepingCurrents = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 2
                }
                Gyrotron1MeasurementsMVPSVoltage = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1MeasurementsBPSVoltage = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1MeasurementsAPSVoltage = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1MeasurementsFilamentVoltage = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2MeasurementsPowerEstimation = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2MeasurementsPowerConsumption = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2MeasurementsMVPSCurrent = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2MeasurementsBPSCurrent = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2MeasurementsAPSCurrent = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2MeasurementsFilamentCurrent = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2MeasurementsSCMCurrents = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 4
                }
                Gyrotron2MeasurementsCollectorSweepingCurrents = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 2
                }
                Gyrotron2MeasurementsMVPSVoltage = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2MeasurementsBPSVoltage = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2MeasurementsAPSVoltage = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2MeasurementsFilamentVoltage = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
            }
        }
        +SDNPubCommands = {
            Class = SDN::SDNPublisher
            Topic = ECPC2SCURU
            Interface = eth3
            Locked = 1
            Signals = {
                Header = {
                     Type = uint8
                     NumberOfElements = 48
                }
                ESDNHeaderVersionId = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ESDNHeaderSize = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ESDNStatus = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ESDNDoNotUse = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ESDNTime = {
                    Type = uint32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Command = {
                    Type = uint16
                    NumberOfDimensions = 1
                    NumberOfElements = 64
                }
            }
        }
        +SDNPubWaveformPacket = {
            Class = SDN::SDNPublisher
            Topic = ECPC2SCURUWF
            Interface = eth3
            Locked = 1
            Signals = {
                Header = {
                     Type = uint8
                     NumberOfElements = 48
                }
                ESDNHeaderVersionId = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ESDNHeaderSize = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ESDNStatus = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ESDNDoNotUse = {
                    Type = uint8
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                ESDNTime = {
                    Type = uint32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                WaveformPacketID = {
                    Type = uint16
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1CorrectionCoilsCurrents = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 2
                }
                Gyrotron1FilamentCurrent = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1SCMCurrents = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 4
                }
                Gyrotron1BPSVoltage = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron1APSVoltage = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2CorrectionCoilsCurrents = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 2
                }
                Gyrotron2FilamentCurrent = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2SCMCurrents = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 4
                }
                Gyrotron2BPSVoltage = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
                Gyrotron2APSVoltage = {
                    Type = float32
                    NumberOfDimensions = 1
                    NumberOfElements = 1
                }
            }
        }
        +EPICSCAOut = {
            Class = "EPICSCA::EPICSCAOutput"
            CPUs = "1"
            StackSize = "10000000"
            IgnoreBufferOverrun = 1
            NumberOfBuffers = 10
            Signals = {
                ESDNTime = {
                    Type = uint32
                    NumberOfElements = 1
                    PVName = "EC-MC-FST-ESDN:TIME"
                }
                CycleTimeIdleThread1kHzAvg = {
                    Type = uint32
                    NumberOfElements = 1
                    PVName = "EC-MC-FST-RTC:CT-IDLE-THR1K-AVG"
                }
                CycleTimeIdleThread1kHzMax = {
                    Type = uint32
                    NumberOfElements = 1
                    PVName = "EC-MC-FST-RTC:CT-IDLE-THR1K-MAX"
                }
                ReplyPacketLatencyAvg = {
                    Type = uint32
                    NumberOfElements = 1
                    PVName = "EC-MC-FST-ESDN:GN-P01-GPF-REPLY-AVG"
                }
                ReplyPacketLatencyMin = {
                    Type = uint32
                    NumberOfElements = 1
                    PVName = "EC-MC-FST-ESDN:GN-P01-GPF-REPLY-MIN"
                }
                ReplyPacketLatencyMax = {
                    Type = uint32
                    NumberOfElements = 1
                    PVName = "EC-MC-FST-ESDN:GN-P01-GPF-REPLY-MAX"
                }
                ReplyPacketOnTimeCounter = {
                    Type = uint32
                    NumberOfElements = 1
                    PVName = "EC-MC-FST-ESDN:GN-P01-GPF-ONTIME-PKTS"
                }
                ReplyPacketLateCounter = {
                    Type = uint32
                    NumberOfElements = 1
                    PVName = "EC-MC-FST-ESDN:GN-P01-GPF-LATE-PKTS"
                }
                ReplyPacketWaveformLateCounter = {
                    Type = uint32
                    NumberOfElements = 1
                    PVName = "EC-MC-FST-ESDN:GN-P01-GPF-LATE-WF-PKTS"
                }
                ESDNSCUConnectionState = {
                    Type = uint32
                    NumberOfElements = 1
                    PVName = "EC-MC-FST-ESDN:GN-P01-GPF-CONN-STATUS"
                }
            }
        }
        +RTThreadSynch100Hz = {
            Class = "RealTimeThreadSynchronisation"
            Timeout = 2000
        }
        +RealTimeThreadAsyncBridge = {
            Class = RealTimeThreadAsyncBridge
        }
        +RandomDataSource = {
            Class = RandomDataSource
            Seed = 5
        }
    }
    +States = {
        Class = ReferenceContainer
        +Idle = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1kHz = {
                    Class = RealTimeThread
                    CPUs = 0x4
                    Functions = {Timer GAMSDNSub GAMSDNPubCommands GAMESDNValidation GAMIdleCTStatistics GAMReplyPacketStatistics GAMThreadSynchOut100Hz GAMConversion GAMEPICSCAOut }
                }
                +Thread100Hz = {
                    Class = RealTimeThread
                    CPUs = 0x2
                    Functions = {GAMThreadSynchIn100Hz GAMSDNPubWaveformPacket}
                }
            }
        }        
        +Error = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x2
                    Functions = {Timer}
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
